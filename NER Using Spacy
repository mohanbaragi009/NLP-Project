
!pip install spacy gradio pdfplumber python-docx matplotlib

!python -m spacy download en_core_web_sm

import spacy
import gradio as gr
from spacy import displacy
from collections import Counter
import pdfplumber
import docx
import matplotlib.pyplot as plt
import tempfile

nlp = spacy.load("en_core_web_sm")

def extract_text_from_file(file):
    if file.name.endswith(".pdf"):
        with pdfplumber.open(file.name) as pdf:
            return "\n".join([page.extract_text() for page in pdf.pages if page.extract_text()])
    elif file.name.endswith(".docx"):
        doc = docx.Document(file.name)
        return "\n".join([para.text for para in doc.paragraphs])
    elif file.name.endswith(".txt"):
        return file.read().decode("utf-8")
    else:
        return "Unsupported file format."

def ner_visualizer(text):
    doc = nlp(text)
    html = displacy.render(doc, style="ent", minify=True)
    return html

def entity_table(text):
    doc = nlp(text)
    entities = [(ent.text, ent.label_) for ent in doc.ents]
    return entities

def entity_stats(text):
    doc = nlp(text)
    labels = [ent.label_ for ent in doc.ents]
    count = Counter(labels)
    if not count:
        return None
    fig, ax = plt.subplots()
    ax.bar(count.keys(), count.values(), color='skyblue')
    ax.set_title("Entity Frequency")
    ax.set_xlabel("Entity Type")
    ax.set_ylabel("Count")
    plt.xticks(rotation=45)
    temp_file = tempfile.NamedTemporaryFile(delete=False, suffix=".png")
    plt.savefig(temp_file.name)
    plt.close()
    return temp_file.name

def process(text, file):
    if file is not None:
        text = extract_text_from_file(file)
    html = ner_visualizer(text)
    entities = entity_table(text)
    chart_path = entity_stats(text)
    return html, entities, chart_path


iface = gr.Interface(
    fn=process,
    inputs=[
        gr.Textbox(label="Enter Text", lines=10, placeholder="Type or paste your text here..."),
        gr.File(label="Or Upload a .txt, .pdf, or .docx File")
    ],
    outputs=[
        gr.HTML(label="Named Entity Visualization"),
        gr.Dataframe(headers=["Entity", "Label"], label="Entity Table"),
        gr.Image(label="Entity Frequency Chart")
    ],
    title="Advanced NER using spaCy",
    description="Upload a document or enter text to extract named entities using spaCy."
)

iface.launch()
